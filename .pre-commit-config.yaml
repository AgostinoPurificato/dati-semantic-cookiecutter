#
# Run pre-commit hooks. You can run them without installing
#  the hook with
#
# $ pre-commit run --all-files --verbose
# $ pre-commit run -a check-filenames-match-uri --verbose
#
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
#- repo: https://github.com/FrankMaverick/dati-semantic-cookiecutter
#  rev: 38f23edd4a6c99dee53243c1245a6b3b3366d3a3
- repo: local 
  hooks:
  - id: check-repo-structure
    name: Check Repository Structure
    entry: python ./scripts/check_repo_structure.py
    args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
    language: python
    files: ^assets/.*
    pass_filenames: false
    types: [file]
  - id: check-filename-format
    name: Check Filename Format
    entry: python ./scripts/check_filename_format.py
    args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
    language: python
    files: ^assets/.*
    pass_filenames: false
    types: [file]
  - id: check-filenames-match-uri
    name: Check Filename match URI
    entry: python ./scripts/check_filename_match_uri.py
    args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
    language: python
    files: ^assets/.*
    pass_filenames: false
    types: [file]
    additional_dependencies: [rdflib]    
  - id: check-filenames-match-directories
    name: Check Filename match Directories
    entry: python ./scripts/check_filenames_match_directories.py
    args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
    language: python
    files: ^assets/.*
    pass_filenames: false
    types: [file]
  - id: check-supported-files
    name: Check encoding and file suffix
    entry: python ./scripts/check_supported_files.py
    args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
    language: python
    files: ^assets/.*
    pass_filenames: false
    types: [file]
  - id: check-versioning-pattern
    name: Check versioning pattern
    entry: python ./scripts/check_versioning_pattern.py
    args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
    language: python
    files: ^assets/.*
    pass_filenames: false
    types: [file]

#
# Semantic checks.
#
- repo: https://github.com/teamdigitale/json-semantic-playground
  rev: 0b4ad4cc883a49878fdfd4539e694ae56b041e29
  hooks:
  - id: validate-csv
    files: >-
      ^assets\/controlled-vocabularies/.*\.csv
  - id: validate-oas-schema
    files: >-
      ^assets\/schemas\/.*.oas3.yaml
  - id: validate-turtle
    files: >-
      ^assets\/ontologies\/[^\/]+\/latest\/.*\.ttl
  - id: validate-turtle
    files: >-
      ^assets\/controlled-vocabularies\/.*\.ttl
  - id: validate-turtle
    files: >-
      ^assets\/schemas\/.*\.ttl
